---
- name: Apt update_cache
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600
  when: "ansible_os_family == 'Debian'"

# Debian related OSs
- name: Ubuntu 14 install software-properties-common
  ansible.builtin.apt:
    name=software-properties-common
    update_cache=yes
    cache_valid_time=3600
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "14"

- name: Apt install java
  ansible.builtin.apt:
    name: default-jdk
    state: present
  when: "ansible_os_family == 'Debian'"
  become: true

- name: Apt install java
  ansible.builtin.apt:
    name: default-jre
    state: present
  when: "ansible_os_family == 'Debian'"
  become: true

- name: Install requisites
  ansible.builtin.package:
    name:
      - wget
      - tar
      - gzip
      - unzip
    state: present
  become: true

- set_fact: hadoop_file="{{ lookup('url', 'http://www-eu.apache.org/dist/hadoop/common/stable/', split_lines=False) | regex_search('(hadoop-)(\d+\.\d+\.\d+)(\.tar\.gz)') }}"
  when: hadoop_version == 'latest'
- set_fact: hadoop_version="{{ hadoop_file | regex_search('(\d+\.\d+\.\d+)') }}"
  when: hadoop_version == 'latest'

- name: "Download {{ hadoop_version }}"
  ansible.builtin.get_url:
    url={{ hadoop_mirrors|random }}/hadoop-{{ hadoop_version }}.tar.gz
    dest=/opt/hadoop-{{ hadoop_version }}.tar.gz
    force=no
  register: result
  until: result is success
  retries: 5
  delay: 2

- name: Unarchive hadoop tgz
  ansible.builtin.unarchive:
    src=/opt/hadoop-{{ hadoop_version }}.tar.gz
    dest=/opt
    creates=/opt/hadoop-{{ hadoop_version }}
    copy=no

- name: "Create {{ hadoop_home }} dir"
  ansible.builtin.file:
    dest={{ hadoop_home }}
    src=/opt/hadoop-{{ hadoop_version }}
    state=link

- name: "Create /opt/hadoop dir"
  ansible.builtin.file:
    dest=/opt/hadoop
    src={{ hadoop_home }}
    state=link

- name: Set JAVA_HOME in hadoop-env.sh in RH
  ansible.builtin.lineinfile:
    dest="{{ hadoop_home }}/etc/hadoop/hadoop-env.sh"
    regexp=JAVA_HOME= 
    line="export JAVA_HOME=/usr/lib/jvm/jre-1.8.0"
  when: "ansible_os_family == 'RedHat'"

- name: Set JAVA_HOME in hadoop-env.sh Deb
  ansible.builtin.lineinfile:
    dest="{{ hadoop_home }}/etc/hadoop/hadoop-env.sh"
    regexp=JAVA_HOME=
    line="export
    JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64"
  when: "ansible_os_family == 'Debian'"
